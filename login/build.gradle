import java.text.SimpleDateFormat

apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "24.0.1"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 24
        versionCode gitCommitCount()
        versionName gitSha()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            archivesBaseName = "${project.name}-${android.defaultConfig.versionName}-${android.defaultConfig.versionCode}"
        }
    }
}

task copyAar(type: Copy) {
    from('build/outputs/aar')
    into('../app/libs')
    include(archivesBaseName + '-release.aar')
}
copyAar.dependsOn assemble

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.android.support:appcompat-v7:25.0.1'
    compile 'com.android.support:design:25.0.1'
    compile 'com.google.android.gms:play-services-auth:10.0.0'
    compile 'com.facebook.android:facebook-android-sdk:4.6.0'

    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.+"
}

def buildTime() {
    def df = new SimpleDateFormat("yyyyMMddHHmm")
    return df.format(new Date())
}

def gitCommitCount() {
    return "git rev-list HEAD --first-parent --count".execute().text.trim().toInteger()
}

def gitSha() {
    return "git rev-parse --short HEAD".execute().text.trim()
}

def gitBranch() {
    return "git rev-parse --abbrev-ref HEAD".execute().text.trim()
}
